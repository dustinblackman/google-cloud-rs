[package]
name = "google-cloud"
version = "0.2.1"
description = "Asynchronous Rust bindings for Google Cloud Platform gRPC APIs"
authors = ["Nicolas Polomack <nicolas@polomack.eu>"]
edition = "2018"
categories = ["web-programming", "network-programming", "asynchronous"]
keywords = ["grpc", "futures", "async", "google", "cloud"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/google-apis-rs/google-cloud-rs"
documentation = "https://docs.rs/google-cloud"

[badges]
maintenance = { status = "actively-developed" }

[dependencies]
# Derive macros
google-cloud-derive = { version = "0.2.1", path = "../google-cloud-derive", optional = true }

tokio = { version = "1.4.0", features = ["macros", "fs", "process"] }
reqwest = { version = "=0.11.20", optional = true, default-features = false, features = ["native-tls-vendored", "json", "stream"] }
hyper = "0.14.4"
hyper-rustls = "0.22.1"
futures = "0.3.13"

http = "0.2.3"
chrono = "0.4.19"

serde = { version = "1.0.125", features = ["derive"] }
json = { package = "serde_json", version = "1.0.64" }
jwt = { package = "jsonwebtoken", version = "7.2.0" }

thiserror = "1.0.24"

bytes = { version = "1.0.1" }
percent-encoding = { version = "2.1.0", optional = true }

[features]
default = ["storage"] # TODO remove.
full = ["storage"]
full-derive = [ "storage"]
storage = ["reqwest", "percent-encoding"]
derive = []

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
